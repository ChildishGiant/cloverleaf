@import url('https://fonts.googleapis.com/css?family=Droid+Sans+Mono|Roboto:300,400');

@font-face {
    font-family: 'text-security-disc';
    src: url('text-security-disc.eot');
    src: url('text-security-disc.eot?#iefix') format('embedded-opentype'),
    url('text-security-disc.woff') format('woff'),
    url('text-security-disc.ttf')  format('truetype'),
    url('text-security-disc.svg#text-security') format('svg');
}

:root {
  --accentColor: #3f51b5;
  --lightAccent: #6d78b5;
  --textColor: #535353;
  --backgroundColor: #fff;
  --internalColor: #fff;
  --incorrectColor: #F44336;
  --correctColor: #5cb85c; /* Bootstrap green */
  --inputColor: #000;
  --linkColor: #00539B;
  --highlightColor: #eee;
}

html,
body {
  height: 100% !important;
  color: #000;
  color: var(--inputColor);
  caret-color: var(--accentColor);
  text-align: center;
  transition: background-color .3s ease, color .3s ease;
}

body {
  font-family: 'Roboto', sans-serif;
  font-weight: 300;
  margin: 0px;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #fff;
  background-color: var(--backgroundColor);
}

#box {
  text-align: center;
  max-width: 75%;
  /*Could be 100% but it's a bit too cramped.*/
  max-height: 100%;
}

.partial {
  width: calc(100% - 3rem) !important;
  align-self: flex-end;
  display: block;
  white-space: nowrap;
}

label {
  color: #535353 !important;
  color: var(--textColor) !important;
  font-size: 1.5rem !important;
  transition: transform .3s ease-out, -webkit-transform .3s ease-out, background-color .3s ease, color .3s ease;
}

.input-field label{
  transition: transform .3s ease-out, -webkit-transform .3s ease-out, background-color .3s ease, color .3s ease;
}

.input-field input[type=text], .input-field input[type=number], .input-field input[type=password] {
  border-bottom: 1px solid #535353;
  border-bottom: 1px solid var(--textColor);
  transition: border .3s ease-out, background-color .3s ease, color .3s ease;
}

/* label underline focus color */
.input-field input[type=text]:focus, .input-field input[type=number]:focus, .input-field input[type=password]:focus {
  border-bottom: 1px solid #3f51b5 !important;
  border-bottom: 1px solid var(--accentColor) !important;
  box-shadow: 0 1px 0 0 #3f51b5 !important;
  box-shadow: 0 1px 0 0 var(--accentColor) !important;
}

input[type=text], input[type=number], input[type=password] {
  font-size: 3rem !important;
  height: 1.2em !important;
  box-sizing: content-box;
  font-family: 'Roboto', sans-serif;
  font-weight: 300;
}


/* label focus color */
.input-field input:focus+label {
  color: #3f51b5 !important;
  color: var(--accentColor) !important;
}

input[type=number] {
  margin-bottom: 0px;
  overflow: scroll
}

#back {
  box-shadow: 0 0.26em 0.65em 0 rgba(0, 0, 0, 0.2);
  background-color: #fff;
  background-color: var(--internalColor);
  border-radius: 0.325em;
  padding: 0.975em;
  padding-top: 1.5em;
  margin: 2em 0;
  max-height: 100%;
  transition: background-color .3s ease, color .3s ease;
}

#result {
  font-family: 'Droid Sans Mono', monospace;
  font-size: 2rem;
  padding: 0.9rem 0px;
  display: inline-block;
  word-wrap: break-word;
  word-break: break-all;
  /*Only breaks when it needs to*/
  min-height: 1em;
  min-width: 20%;
}

#result:empty:not(:focus):before {
  content:attr(data-text);
}

#copy {
  display: block;
  margin: auto;
}

#submit {
  font-weight: normal;
  /*Resetting weight of the button to the standard.*/
}

.hint {
  float: left;
  color: #535353;
  color: var(--textColor);
  width: 100%;
  text-align: left;
  transition: background-color .3s ease, color .3s ease;
}

input, textarea {
  font-size: 1.56rem;
  padding: 0.65rem;
  color: #000 !important;
  color: var(--inputColor) !important;
  margin: 0 0 0.8rem 0 !important;
  transition: background-color .3s ease, color .3s ease;
}

input#length {
  margin: 0px !important;
  height: 1em;  /* To stop the input wiggling on firefox */
}

#faq {
  float: right;
  cursor: help;
  font-weight: 500;
  color: #00539B;
  color: var(--linkColor);
  margin-top: 0.4em;
}

.cf:before, .cf:after {
  content: " ";
  display: table;
}

.cf:after {
  clear: both;
}


/*
For IE 6/7 only
Include this rule to trigger hasLayout and contain floats.
*/
.cf {
  *zoom: 1;
}

ul.autocomplete-content.dropdown-content {
  background: -webkit-linear-gradient(left, #fff 0%, #fff 80% ,#fff 80% );
  background: -o-linear-gradient(left, #fff 0%, #fff 80% ,#fff 80% );
  background: linear-gradient(to right, #fff 0%, #fff 80% ,#fff 80% );

  background: -webkit-linear-gradient(left, var(--backgroundColor) 0%, var(--backgroundColor) 80% ,#fff 80% );
  background: -o-linear-gradient(left, var(--backgroundColor) 0%, var(--backgroundColor) 80% ,#fff 80% );
  background: linear-gradient(to right, var(--backgroundColor) 0%, var(--backgroundColor) 80% ,#fff 80% );
  position: absolute !important;
  width: calc(100% - 3rem);
  max-height: calc(99% * 4); /* 100% is just over 1 row so I'm going with 99% */
  overflow-y: auto;
  overflow-x: hidden;
  top: 3.5em;
  margin-top: 0px;
}

ul.autocomplete-content.dropdown-content li {
  background: #fff;
  background: linear-gradient(to right, var(--backgroundColor) 0%, var(--backgroundColor) 80% ,#fff 80% );
  height: 3em;
}

.dropdown-content li:hover, .dropdown-content li.active, .dropdown-content li.selected{
  color:red;
  background: linear-gradient(to right, #eee 0%, #eee 80% ,#fff 80% ) !important;
  background: linear-gradient(to right, var(--highlightColor) 0%, var(--highlightColor) 80% ,#fff 80% ) !important;
}

ul.autocomplete-content.dropdown-content span {
  display: inline-flex;
  align-items: center;
  white-space: nowrap;
  max-width: 70%;
  height: 100%;
  vertical-align: middle;
}

ul.autocomplete-content.dropdown-content span:not(.highlight) {
  color: #535353;
  color: var(--textColor);
  overflow-x: hidden;
}

ul.autocomplete-content.dropdown-content span .highlight{
  max-width: 100%;
  color: #535353;
  color: var(--textColor);
  overflow: visible;
  /*color: var(--inputColor);*/
}

.dropdown-content::-webkit-scrollbar {
  width: 17px !important;
  background-color: #fff !important;
}


.dropdown-content::-webkit-scrollbar-track {
  width: 17px;
  background-color: #fff !important;
}

.dropdown-content::-webkit-scrollbar-thumb {
  border-radius: 100px;
  width: 17px;
	background-color: rgba(0,0,0,0.5);
}

li img.right.circle {
  width: calc(20% - 10px);
  height: calc(100% - 10px);
  margin:5px;
}


/*If I keep the rounded element, the twitter bird's beak gets cut :-;*/
.circle {
  object-fit: scale-down;
  border-radius: 0px;
}

.switch {
  padding-bottom: 1.3rem;
}

input[type=checkbox]:checked:not(:disabled) ~ .lever:active::before,
input[type=checkbox]:checked:not(:disabled).tabbed:focus ~ .lever::before {
  transform: scale(2.4);
  background-color: rgba(63, 81, 181, 0.3);
}


/*Switch knob*/
.switch label input[type=checkbox]:checked+.lever:after {
  background-color: #3f51b5;
  background-color: var(--accentColor);
}


/*Switch backing*/
.switch label input[type=checkbox]:checked+.lever {
  background-color: #6d78b5;
  background-color: var(--lightAccent);
}

#passTogglelever {
  left: -4px; /* Centering the toggle */
}

.input-group-addon {
  position: absolute;
  width: calc(3rem + 0.1em);
  font-size: 2rem;
  top: 0px;
  right: -5px;
}


.icon {
  font-size: 1.4em !important;
  color: #535353;
  color: var(--textColor);
  transition: color .2s;
  cursor: pointer;
}

.icon:hover {
  color: #6d78b5;
  color: var(--lightAccent);
}

.icon:active {
  color: #3f51b5;
  color: var(--accentColor);
}

.input-field label:not(.label-icon).active {
  -webkit-transform: translateY(-1em) scale(0.8);
  transform: translateY(-1em) scale(0.8);
  -webkit-transform-origin: 0 0;
  transform-origin: 0 0;
}

/* Negative toasts get this */
.warning {
  background-color: #F44336;
  background-color: var(--incorrectColor);
}

/* Positive toasts get this */
.success {
  background-color: #5cb85c;
  background-color: var(--correctColor);
}

#jsBanner {
  position: absolute;
  width: 100%;
  height: 100%;
  text-align: center;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 900;
  font-size: 10vmin;
  top:0px;
  left:0px;
  color: #fff;
  color: var(--backgroundColor);
  -webkit-text-stroke-width: 2px !important;
  -webkit-text-stroke-color: #535353 !important;
  -webkit-text-stroke-color: var(--textColor) !important;
}

#jsBanner a {
  color: #fff;
  color: var(--backgroundColor);
  -webkit-text-stroke: 3px #535353;
  -webkit-text-stroke: 3px var(--textColor);
  text-decoration: underline;
}

#logo {
  max-width:100%;
  max-height:100%;
}

#app {
  margin-bottom: 0.55em !important;
}

ul:empty {
  display: none;
}

::-ms-reveal { /* Disable Edge's show/hide since we made one */
    display: none;
}

#logoContainer { /* For portrait logos so they don't oversize */
  background: #fff;
  padding: 3px;
  border-radius: 5px;
  height: calc(3rem + 0.1em);
  display: none;
  justify-content: center;
  align-items: center;
}

#themePicker {
  left: 5px;
  max-width: 90%;
  top: 1em;
  position: fixed;
  position: absolute;
  left: 50%;
  transform: translate(-50%, 0px);
}

#themePicker label, #themePicker label::before, #themePicker label::after {
  height: 2.5rem;
  width: 2.5rem;
  display: inline-block;
  margin: 0px;
  padding: 0px;
}

#themeForm p {
  text-align: center;
  display: inline-block;
  margin-bottom: 0px;
  -webkit-margin-before: 0px;
  -webkit-margin-after: 0px;
  height: 3rem;
  width: 3rem;
  text-align: center;
}

input[type="radio"] {
  margin: 0px;
  width: 0px;
  height: 0px;
  padding: 0px;
}

input[type="radio"]:checked+label::before {
  box-shadow: 0px 0px 3px 1px #535353;
  box-shadow: 0px 0px 3px 1px var(--textColor);
}

label:focus{
    outline: none;
}

.github-corner:hover .octo-arm {
    animation: octocat-wave 560ms ease-in-out;
}

@keyframes octocat-wave {
    0%, 100% {
        transform: rotate(0);
    }
    20%,
    60% {
        transform: rotate(-25deg);
    }
    40%,
    80% {
        transform: rotate(10deg);
    }
}

@media (max-width: 500px) {
    .github-corner:hover .octo-arm {
        animation: none;
    }
    .github-corner .octo-arm {
        animation: octocat-wave 560ms ease-in-out;
    }
}

/* If we're on a small/mobile device */
@media only all and (max-width:40em) {
  #back {
    /* Ditch loads of padding */
    margin: 0px;
  }
  #box {
    max-width: calc(100% - 25px);
  }
}

/* If it won't fit vertically */
@media only all and (max-height:600px) {
  html {
    /* Drop the font size */
    font-size: 2vh;
  }
}

.hidden {
  font-family: 'text-security-disc' !important;
  font-size: 4rem  !important;
  line-height: 3rem;
}

.material-icons {
  user-select:none
}

#cookieAlert {
  bottom: 0px;
  background-color: var(--internalColor);
  width: 100%;
  padding: 0.5em 1em;
  position: fixed;
  user-select: none;
  z-index: 998;
  box-shadow: 0 0 3px 0px var(--textColor);
}

#cookieAlert span {
  display: block;
  width: calc(100% - 2em);
  left: 0px;
}

#cookieAlert svg {
  position: absolute;
  top: 0.25em;
  right: 1em;
}

.btn-floating.btn-large i {
  font-size: 2rem;
  line-height: 4rem;
}

.btn-floating.btn-large {
  width: 4rem;
  height: 4rem;
}
